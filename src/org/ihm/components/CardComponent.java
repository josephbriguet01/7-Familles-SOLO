/*
 * Copyright (C) BRIGUET Systems, Inc - All Rights Reserved
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 *
 * Written by LAMACHE, Juin 2018
 */
package org.ihm.components;



import java.awt.Cursor;
import javax.swing.Icon;
import org.ihm.Screen;
import org.metier.Card;
import org.metier.util.Matrix;
import org.metier.util.Pictures;



/**
 * Crée des objet carte graphique
 * @author Joseph BRIGUET
 * @author Ben YOUSSOUFA
 * @author Fabien Tressaille
 * @author Damien ARROUDJ
 */
public class CardComponent extends javax.swing.JPanel {

    
    
    private Card c;
    private Icon enter;
    private Icon exited;
    private int status;
    private Icon enterMini;
    private Icon exitedMini;
    private Screen parent;
    
    
    
    /**
     * Crée une carte graphique
     * @param c Correspond à une carte du jeu
     */
    public CardComponent(Card c) {
        initComponents();
        this.c = c;
        this.enter = new javax.swing.ImageIcon(getClass().getResource(c.getPathImg()));
        Pictures p1 = new Pictures(enter);
        p1.resize(50, 73);
        this.enterMini = p1.getIcon();
        Pictures pic = new Pictures(new javax.swing.ImageIcon(getClass().getResource(c.getPathImg())));
        for(int i=0;i<25;i++){
            pic.blurred();
        }
        this.exited = pic.getIcon();
        Pictures p2 = new Pictures(exited);
        p2.resize(50, 73);
        this.exitedMini = p2.getIcon();
    }

    
    
    /**
     * Modifie le parent
     * @param parent Correspond à la fenêtre parente
     */
    public void setParent(Screen parent) {
        this.parent = parent;
    }
    
    /**
     * Modifie le status d'une carte
     * @param status Correspond au nouveau status
     */
    public void setStatus(int status){
        this.status = status;
        if(status == Matrix.HAS_CARD){
            
            jLabel1.setIcon(enterMini);
            jLabel1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
        if(status == Matrix.CAN_HAVE_CARD){
            jLabel1.setIcon(exitedMini);
            jLabel1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        }
        if(status == Matrix.HASNOT_CARD){
            jLabel1.setIcon(null);
            jLabel1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
        jLabel1.repaint();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(50, 73));
        setMinimumSize(new java.awt.Dimension(50, 73));
        setPreferredSize(new java.awt.Dimension(50, 73));
        setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });
        add(jLabel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        if(status == Matrix.CAN_HAVE_CARD){
            jLabel1.setIcon(enterMini);
        }
        parent.enterCardComponent(enter);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        if(status == Matrix.CAN_HAVE_CARD){
            jLabel1.setIcon(exitedMini);
        }
        parent.exitCardComponent();
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        if(status == Matrix.CAN_HAVE_CARD){
            parent.clickedCardComponent(c);
        }
    }//GEN-LAST:event_jLabel1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}